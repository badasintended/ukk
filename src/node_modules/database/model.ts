import { AllowNull, AutoIncrement, Column, DataType, PrimaryKey, Table, Model, Sequelize } from "sequelize-typescript";

@Table({
    tableName: "tbl_login",
    underscored: true,
    timestamps: false
})
class User extends Model {
    @PrimaryKey
    @Column
    username: string

    @Column(DataType.TEXT)
    password: string
}


@Table({
    tableName: "tbl_barang",
    underscored: true,
    timestamps: false
})
class Menu extends Model {
    @PrimaryKey
    @Column
    id: number

    @AllowNull(false)
    @Column({ field: "kode" })
    code: string

    @AllowNull(false)
    @Column({ field: "nama" })
    name: string

    @AllowNull(false)
    @Column({ field: "harga" })
    price: string
}


@Table({
    tableName: "tbl_pelanggan",
    underscored: true,
    timestamps: false
})
class Customer extends Model {
    @PrimaryKey
    @Column
    id: number

    @AllowNull(false)
    @Column({ field: "kode" })
    code: string

    @AllowNull(false)
    @Column({ field: "nama" })
    name: string

    @AllowNull(false)
    @Column({ field: "alamat", type: DataType.TEXT })
    address: string
}

@Table({
    tableName: "tbl_pelanggan",
    underscored: true,
    timestamps: false
})
class Transaction extends Model {
    @PrimaryKey
    @Column
    id: number

    @AllowNull(false)
    @Column({ field: "id_barang" })
    menuId: number

    @AllowNull(false)
    @Column({ field: "id_pelanggan" })
    customerId: number

    @AllowNull(false)
    @Column({ field: "tanggal" })
    date: Date

    @AllowNull(false)
    @Column({ field: "jumlah_barang" })
    qty: number

    @AllowNull(false)
    @Column({ field: "jumlah_harga" })
    totalPrice: number

    @AllowNull(false)
    @Column({ field: "diskon" })
    discount: number

    @AllowNull(false)
    @Column({ field: "harga_setelah_diskon" })
    priceAfterDiscount: number
}

require("dotenv").config();
const env = process.env;

const sequelize = new Sequelize({
    database: env.DB_NAME,
    dialect: "mariadb",
    username: env.DB_USERNAME,
    password: env.DB_PASSWORD,
    host: env.DB_HOST,
    port: +env.DB_PORT,
    models: [User, Menu, Customer, Transaction]
})


export { User, Menu, Customer, Transaction }
